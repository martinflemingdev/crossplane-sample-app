{
    "Description": "https://arcgisstore.s3.us-east-1.amazonaws.com/110/templates/arcgis-application-loadbalancer.template.json",
    "Metadata": {
     "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
       {
        "Label": {
         "default": "Amazon VPC Network Configuration"
        },
        "Parameters": [
         "VPCId",
         "Subnet1",
         "Subnet2"
        ]
       },
       {
        "Label": {
         "default": "Amazon Elastic Load Balancer Configuration"
        },
        "Parameters": [
         "SSLCertificateARN",
         "ELBScheme"
        ]
       }
      ],
      "ParameterLabels": {
       "VPCId": {
        "default": "VPC ID (Required)"
       },
       "Subnet1": {
        "default": "Subnet ID 1 (Required)"
       },
       "Subnet2": {
        "default": "Subnet ID 2 (Required)"
       },
       "SSLCertificateARN": {
        "default": "SSL Certificate ARN (Required)"
       },
       "ELBScheme": {
        "default": "Load Balancer Scheme (Optional)"
       }
      }
     }
    },
    "Parameters": {
     "SSLCertificateARN": {
      "Type": "String",
      "AllowedPattern": "^arn:(aws[a-zA-Z-]*)?:acm:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:certificate/[a-z0-9-]{8,}$",
      "ConstraintDescription": "Invalid SSL Certificate ARN. It must be in this arn:aws:acm:<region>:<account-id>:certificate/<resourceid> format.",
      "Description": "Provide ARN of the SSL certificate imported in AWS Certificate Manager. It must be in this arn:aws:acm:<region>:<account-id>:certificate/<resourceid> format."
     },
     "VPCId": {
      "Type": "AWS::EC2::VPC::Id",
      "AllowedPattern": "^vpc-[a-z0-9]*$",
      "ConstraintDescription": "Must start with 'vpc-' and can contain alphanumeric lowercase characters only.",
      "Description": "Choose a VPC ID."
     },
     "Subnet1": {
      "Type": "AWS::EC2::Subnet::Id",
      "AllowedPattern": "^subnet-[a-z0-9]*$",
      "ConstraintDescription": "Must start with 'subnet-' and can contain alphanumeric lowercase characters only.",
      "Description": "Choose a subnet ID. The subnet ID that you select must be within the VPC you have selected above."
     },
     "Subnet2": {
      "Type": "AWS::EC2::Subnet::Id",
      "AllowedPattern": "^subnet-[a-z0-9]*$",
      "ConstraintDescription": "Must start with 'subnet-' and can contain alphanumeric lowercase characters only.",
      "Description": "Choose a second subnet ID. This must be a different subnet ID than you used for Subnet ID 1. The subnet Id that you select must be within the VPC you have selected above."
     },
     "ELBScheme": {
      "Type": "String",
      "Default": "internet-facing",
      "AllowedValues": [
       "internet-facing",
       "internal"
      ],
      "Description": "Choose load balancer scheme. Default is 'internet-facing'."
     }
    },
    "Resources": {
     "ELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
       "GroupDescription": {
        "Ref": "AWS::StackName"
       },
       "SecurityGroupIngress": [
        {
         "CidrIp": "0.0.0.0/0",
         "FromPort": 80,
         "IpProtocol": "tcp",
         "ToPort": 80
        },
        {
         "CidrIp": "0.0.0.0/0",
         "FromPort": 443,
         "IpProtocol": "tcp",
         "ToPort": 443
        }
       ],
       "Tags": [
        {
         "Key": "arcgisenterprise:cloudformation:logical-id",
         "Value": "ELBSecurityGroup"
        },
        {
         "Key": "arcgisenterprise:cloudformation:stack-id",
         "Value": {
          "Ref": "AWS::StackId"
         }
        },
        {
         "Key": "arcgisenterprise:cloudformation:stack-name",
         "Value": {
          "Ref": "AWS::StackName"
         }
        },
        {
         "Key": "arcgisenterprise:cloudformation:template-name",
         "Value": "arcgis-application-loadbalancer.template.json"
        },
        {
         "Key": "arcgisenterprise:cloudformation:template-provider",
         "Value": "Esri"
        },
        {
         "Key": "Name",
         "Value": {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "AWS::StackName"
            },
            "-SG"
           ]
          ]
         }
        }
       ],
       "VpcId": {
        "Ref": "VPCId"
       }
      }
     },
     "ApplicationLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
       "LoadBalancerAttributes": [
        {
         "Key": "access_logs.s3.enabled",
         "Value": "false"
        },
        {
         "Key": "idle_timeout.timeout_seconds",
         "Value": "600"
        },
        {
         "Key": "deletion_protection.enabled",
         "Value": "false"
        },
        {
         "Key": "routing.http2.enabled",
         "Value": "true"
        },
        {
         "Key": "routing.http.drop_invalid_header_fields.enabled",
         "Value": "false"
        }
       ],
       "Scheme": {
        "Ref": "ELBScheme"
       },
       "SecurityGroups": [
        {
         "Ref": "ELBSecurityGroup"
        }
       ],
       "Subnets": [
        {
         "Ref": "Subnet1"
        },
        {
         "Ref": "Subnet2"
        }
       ],
       "Tags": [
        {
         "Key": "arcgisenterprise:cloudformation:logical-id",
         "Value": "ApplicationLoadBalancer"
        },
        {
         "Key": "arcgisenterprise:cloudformation:stack-id",
         "Value": {
          "Ref": "AWS::StackId"
         }
        },
        {
         "Key": "arcgisenterprise:cloudformation:stack-name",
         "Value": {
          "Ref": "AWS::StackName"
         }
        },
        {
         "Key": "arcgisenterprise:cloudformation:template-name",
         "Value": "arcgis-application-loadbalancer.template.json"
        },
        {
         "Key": "arcgisenterprise:cloudformation:template-provider",
         "Value": "Esri"
        }
       ],
       "Type": "application"
      }
     },
     "HTTPSListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
       "DefaultActions": [
        {
         "FixedResponseConfig": {
          "ContentType": "text/plain",
          "MessageBody": "Default rule reached",
          "StatusCode": "200"
         },
         "Order": 1,
         "Type": "fixed-response"
        }
       ],
       "LoadBalancerArn": {
        "Ref": "ApplicationLoadBalancer"
       },
       "Certificates": [
        {
         "CertificateArn": {
          "Ref": "SSLCertificateARN"
         }
        }
       ],
       "Port": 443,
       "Protocol": "HTTPS",
       "SslPolicy": "ELBSecurityPolicy-2016-08"
      }
     },
     "HTTPListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
       "DefaultActions": [
        {
         "Order": 1,
         "RedirectConfig": {
          "Host": "#{host}",
          "Path": "/#{path}",
          "Port": "443",
          "Protocol": "HTTPS",
          "Query": "#{query}",
          "StatusCode": "HTTP_301"
         },
         "Type": "redirect"
        }
       ],
       "LoadBalancerArn": {
        "Ref": "ApplicationLoadBalancer"
       },
       "Port": 80,
       "Protocol": "HTTP"
      }
     }
    },
    "Outputs": {
     "ELBName": {
      "Description": "Elastic Load Balancer name",
      "Value": {
       "Fn::GetAtt": [
        "ApplicationLoadBalancer",
        "LoadBalancerName"
       ]
      }
     },
     "ELBDNSName": {
      "Description": "Elastic Load Balancer DNS name",
      "Value": {
       "Fn::GetAtt": [
        "ApplicationLoadBalancer",
        "DNSName"
       ]
      }
     }
    }
   }